 def workbook = new ExcelBuilder().build {
                    sheet {
                        row {
                            cell {
                                "test"
                            }
                        }
                    }
                }

                workbook.write(new FileOutputStream(new File('sample.xlsx')))

-----------------------------------------------------------------------------------------------------------------------


import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class TestXSSF {
	static XSSFWorkbook workbook;
	static FileInputStream file;

	public static void main(String args[]) throws IOException {
		FileOutputStream fos=new FileOutputStream(new File(System.getProperty("user.dir")+"/input_data/excel.xlsx"));

		XSSFWorkbook wb=new XSSFWorkbook();
		XSSFSheet ws=wb.createSheet();
		XSSFRow row=ws.createRow(0);
		for(int i=0;i<=5;i++)
		{
			Cell cell=row.createCell(i);
			cell.setCellValue(i);
		}
		wb.write(fos);
		fos.close();
	}	
}


----------------------------------------------------------------------------------------
public void exportTable() throws IOException
{
    FileOutputStream fos=new FileOutputStream(new File("C:\\Users\\*****\\OneDrive\\Desktop\\excel.xlsx"));
    XSSFWorkbook wb=new XSSFWorkbook();
    XSSFSheet ws=wb.createSheet();
    XSSFRow row=ws.createRow(0);
    for(int i=0;i<=5;i++)
    {
        Cell cell=row.createCell(i);
        cell.setCellValue(i);
    }
    wb.write(fos);
    fos.close();
}

-----------------------------------------------------------------
https://www.youtube.com/watch?v=0aCtTvjH-70&ab_channel=MaximumAutomation



writing data to excel file

def void writeToExcel(int iRow, int iCell, String iText, String Workbook , String Sheetname ){

         //     FileInputStream file = new FileInputStream (new File("..\\\\FNolDetails.xlsx"))

         FileInputStream file = new FileInputStream (new File(Workbook))

         XSSFWorkbook workbook = new XSSFWorkbook(file);

         //     XSSFSheet sheet = workbook.getSheet("Smoke Result")

         XSSFSheet sheet = workbook.getSheet(Sheetname)

         //Write data to excel'

         Row oRow;

         oRow = sheet.getRow(iRow);

         if(oRow == null){

                sheet.createRow(iRow);

                oRow = sheet.getRow(iRow);

         }

         Cell oCell;

         oCell = oRow.getCell(iCell - 1);

         if(oCell == null ){

                oRow.createCell(iCell - 1);

                oCell = oRow.getCell(iCell - 1);

         }

         oCell.setCellValue(iText);

         //FileOutputStream outFile =new FileOutputStream(new File("..\\\\FNolDetails.xlsx"));

         FileOutputStream outFile =new FileOutputStream(new File(Workbook));

         workbook.write(outFile);

         outFile.close();

   }


   ---------------------------------------------------------------------------
 script {
                    // Replace with the actual path to your Apache POI .jar files
                    //def poiLibDir = "../libs"kj
                    def poiLibDir = "./libs"

                    // Add the Apache POI .jar files to the classpath
                    addJarsToPipeline(currentBuild.workspace, "${poiLibDir}/poi-5.2.3.jar", "${poiLibDir}/poi-ooxml-5.2.3.jar", "${poiLibDir}/ooxml-schemas-1.0.jar", "${poiLibDir}/commons-collections4-4.4.jar")
                }


   ------------------------------------------------------------


@Library('StarkProjekt') _ 

import org.foo.ClassCreator
import org.apache.poi.ss.usermodel.*
import java.io.*;


// Erstelle eine neue Arbeitsmappe (Workbook)
Workbook workbook = new ClassCreator()
 
// Erstelle ein neues Arbeitsblatt (Sheet)
Sheet sheet = workbook.createSheet("Tabelle1")

// Erstelle eine Kopfzeile

Row headerRow = sheet.createRow(0)
headerRow.createCell(0).setCellValue("Name")
headerRow.createCell(1).setCellValue("Alter")
headerRow.createCell(2).setCellValue("Beruf")

// Füge Datenzeilen hinzu
Row dataRow1 = sheet.createRow(1)
dataRow1.createCell(0).setCellValue("Max Mustermann")
dataRow1.createCell(1).setCellValue("dreißig")
dataRow1.createCell(2).setCellValue("Ingenieur")

Row dataRow2 = sheet.createRow(2)
dataRow2.createCell(0).setCellValue("Erika Musterfrau")
dataRow2.createCell(1).setCellValue("28")
dataRow2.createCell(2).setCellValue("Lehrer") 


// Specify the file path relative to the workspace
def filePath = "${WORKSPACE}/JulesBeispiel.xlsx"


// Speichere die Arbeitsmappe in einer Datei
//FileOutputStream fileOut = new FileOutputStream("filePath")
FileOutputStream fileOut = new FileOutputStream(new File("filePath"));
workbook.write(fileOut)
fileOut.close()

//def newFile = new File(filePath)
def newFile = new File("${WORKSPACE}/testJules2.txt")
newFile.createNewFile() 


println("Die Excel-Datei wurde erfolgreich erstellt.")


